export default {
  c: {
    name: 'Name',
    group: 'Group',
    manageNode: 'Management Node',
    workNode: 'Work Node',
    statusOn: 'On',
    statusOff: 'Off',
    cluster: 'Cluster',
    containerName: 'Container Name',
    sshConnectionInfo: 'SSH Connection Info',
    dockerMonitoringDisabled: 'Docker not available or monitoring disabled',
    repoAddress: 'Repository Address',
    repoAccount: 'Repository Account',
    repoPassword: 'Repository Password',
    accountEmail: 'Account Email',
    selectWorkspace: 'Please select a workspace',
    belongWorkspace: 'Belonging Workspace: ',
    cancel: 'Cancel',
    confirm: 'Confirm',
    systemTip: 'System Tip'
  },
  p: {
    noAssetDocker: 'No Asset DOCKER',
    clusterId: 'Cluster ID',
    quickBackFirstPage: 'Hold Ctrl or Alt/Option key to click the button to quickly return to the first page',
    search: 'Search',
    add: 'Add',
    batchAssign: 'Batch Assign',
    autoDetectDocker:
      'Automatically detect whether there is docker on the server where the service is located, and if so, it will be automatically added to the list',
    autoProbe: 'Auto Probe',
    clusterInfo: 'Cluster Info',
    clusterIdLabel: 'Cluster ID:',
    currentNodeId: 'Current Node ID:',
    currentNodeAddress: 'Current Node Address:',
    clusterCreateTime: 'Cluster Creation Time:',
    clusterUpdateTime: 'Cluster Update Time:',
    tlsEnableCertInfo: 'Enable TLS authentication, certificate information:',
    tlsDisable: 'Disable TLS authentication',
    certLost: 'Certificate lost',
    unknown: 'Unknown',
    console: 'Console',
    clusterOperation: 'Cluster Operation',
    createCluster: 'Create Cluster',
    joinCluster: 'Join Cluster',
    assign: 'Assign',
    associate: 'Associate',
    more: 'More',
    edit: 'Edit',
    delete: 'Delete',
    exitCluster: 'Exit Cluster',
    editDocker: 'Edit Docker',
    sshConnectInfo:
      'SSH connection to docker is implemented through the terminal, and each operation of docker-related APIs requires logging in to the terminal once',
    versionRequirement: 'Version needs to be greater than 18',
    sshConnectAvailable: 'Can use SSH connection',
    sshNoDockerDetected:
      'If SSH is used but cannot be selected, it means that the system has not detected the docker service',
    sshDockerNotDetected:
      'If there is docker in your SSH machine but the system has not detected it, you need to go to [Configuration Management]-',
    modifyConfigFile: '[System Configuration Directory] to modify',
    compatibleMachine: 'File to make your machine compatible',
    useDockerHttpInterface:
      'The system uses the docker http interface to communicate and manage docker, but by default',
    noAuthentication: 'No authentication is enabled',
    makesItUnsafe: 'This makes',
    extremelyUnsafe: 'extremely unsafe',
    exposedToInternet: 'If the port is exposed to the public network, it is very',
    easyToMine: 'prone to mining',
    stronglyRecommendTLS: 'So here, we',
    useTLSCertificate: 'strongly recommend that you use a TLS certificate',
    certificateGeneration:
      'You can refer to the document on certificate generation) to connect to docker and improve security',
    ifPortIsInternal: 'If the port',
    ignoreTLSCertificate: 'can ignore the TLS certificate when used within the internal network',
    note: 'Note:',
    ipMustMatchDockerHost: 'The allowed IP of the certificate needs to be consistent with the docker host',
    addNewGroup: 'Add New Group',
    selectGroupName: 'Select Group Name',
    enableSSHAccess: 'Enable SSH Access',
    sshMonitoringForDocker: 'SSH monitoring needs to be able to obtain docker information',
    containerAddressTCP: 'Container address TCP',
    tlsAuthentication: 'TLS Authentication',
    certificateInfo: 'Certificate information',
    uploadOrSelectCertificate:
      'You can upload it in advance through certificate management or click the button below to select/import a certificate',
    enterOrSelectCertificateInfo:
      'Please enter the certificate information or select the certificate information. The certificate information filling rules are: serial number: certificate type',
    selectCertificate: 'Select Certificate',
    otherConfiguration: 'Other Configurations',
    timeout: 'Timeout',
    timeoutInSeconds: 'Timeout (in seconds)',
    createDockerCluster: 'Create Docker Cluster',
    reminder: 'Friendly Reminder',
    createClusterBehavior:
      'Creating a cluster will attempt to obtain cluster information from docker. If cluster information exists, it will automatically synchronize the cluster information to the system. Otherwise, a swarm cluster will be automatically created',
    joinDockerCluster: 'Join Docker Cluster',
    selectCluster: 'Select Cluster',
    joinToCluster: 'Join to Which Cluster',
    clusterIP: 'Cluster IP',
    containerLabel: 'Associated Container Label',
    role: 'Role',
    assignToOtherWorkspace: 'Assign to Other Workspace',
    assignmentType: 'Assignment Type',
    selectWorkspace: 'Select Workspace',
    associatedWorkspaceDocker: 'Associated Workspace Docker',
    cannotDeleteDirectly:
      'Docker or clusters assigned to workspaces cannot be deleted directly. They need to be deleted one by one in the assigned workspaces before the asset Docker or cluster can be deleted',
    name: 'Name:',
    clusterName: 'Cluster Name:',
    selectCertificateFile: 'Select Certificate File',
    version: 'Version',
    status: 'Status',
    groupName: 'Group Name',
    lastModifier: 'Last Modifier',
    createTime: 'Creation Time',
    updateTime: 'Update time',
    operation: 'Operation',
    containerName: 'Please fill in the container name',
    clusterToJoin: 'Please select the cluster to join',
    nodeRole: 'Please select the node role',
    clusterIp: 'Please fill in the cluster IP',
    correctIp: 'Fill in the correct IP address',
    sshConnectionInfo: 'Please select SSH connection information',
    hostInput: 'Please enter the host',
    confirmDockerDeletion:
      'Are you sure you want to delete this Docker? Deletion will only check the data association of the local system and will not delete the data in the Docker container',
    confirmForceExitCluster: 'Are you sure you want to forcibly exit the cluster?',
    dataInconsistencyWarning: 'If the current cluster still exists, there may be data inconsistency issues',
    backupDataWarning: 'Please backup your data before operating',
    avoidExitingManagerNode: 'Please do not exit the management node first',
    operationIrreversible: 'The operation cannot be undone',
    allocationType: 'Please select the allocation type'
  }
}
