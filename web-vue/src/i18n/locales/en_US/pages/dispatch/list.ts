export default {
  c: {
    distributionType: 'Distribution Type',
    independent: 'Independent',
    related: 'Related',
    unknown: 'Unknown',
    yes: 'Yes',
    no: 'No',
    edit: 'Edit',
    distributionID: 'Distribution ID',
    distributionIDEqualsProjectID: 'Distribution ID equals Project ID',
    cannotModifyAfterCreation: 'Cannot modify after creation',
    randomlyGenerated: 'Randomly generated',
    distributionName: 'Distribution Name',
    groupingName: 'Grouping Name:',
    addNewGrouping: 'Add New Grouping',
    selectGrouping: 'Select Grouping',
    distributionNode: 'Distribution Node',
    noProjectInThisNode: 'No project in this node',
    independentDistribution: '[Independent Distribution]',
    distributionOperationAfter: 'Operation after distribution',
    selectOperationAfterPublish: 'Select operation after publish',
    intervalTime: 'Interval Time',
    ensureProjectRestart:
      'Ensure project restart when using sequential restart, full sequential restart during multi-node distribution',
    waitPreviousProjectStart: 'Wait for the previous project to start before closing the next project',
    configureBasedOnProjectStartTime: 'Please configure based on your project start time',
    suggestedIntervalTime: 'It is generally recommended to be more than 10 seconds',
    distributionIntervalTimeEffect:
      'Distribution interval time (sequential restart, full sequential restart) is effective',
    secondaryDirectory: 'Secondary Directory',
    publishToRootIfNotFilled: 'Publish to the root of the project if not filled',
    clearPublish: 'Clear Publish',
    clearPublishDescription:
      'Clear publish means that before uploading new files, all files in the project folder directory will be deleted first, and then the new files will be saved',
    publishStopBefore:
      'Stop before publishing means that when publishing files to the project file, the project will be closed first, and then the file replacement will be carried out. This avoids the situation where files are occupied in the Windows environment',
    publishStopBeforeColon: 'Stop before publishing:',
    distributionRequestAddress:
      'Distribution process request corresponding address, start distribution, distribution completed, distribution failed, cancel distribution',
    parametersForDistribution: 'Parameters entered: outGivingId, outGivingName, status, statusMsg, executeTime',
    statusValues: 'Values: 1',
    distributionStatuses: 'Distribution in progress, 2: Distribution ended, 3: Canceled, 4: Distribution failed',
    asynchronousRequest: 'Asynchronous requests cannot guarantee order',
    distributionProcessRequest: 'Distribution process request, optional, GET request',
    immutableAfterCreation: 'Immutable after creation, Distribution ID equals Project ID',
    runProject: 'Run Project',
    selectProjectAuthorizationPath: 'Select Project Authorization Path',
    configuration: 'Configuration',
    configurationExample: 'Configuration Example',
    defaultLogDirectory: "Default is in the plugin data directory /{'${projectId}'}/{'${projectId}'}.log",
    selectProject: 'Select Project',
    systemPrompt: 'System Prompt',
    confirm: 'Confirm',
    cancel: 'Cancel'
  },
  p: {
    distributionID: 'Distribution ID',
    name: 'Name',
    selectGrouping: 'Select Grouping',
    selectStatus: 'Select Status',
    quickBackToFirstPage: 'Hold Ctr or Alt/Option and click the button to quickly return to the first page',
    search: 'Search',
    addRelated: 'Add Related',
    addDistribution: 'Add Distribution',
    nodeDistributionDescription:
      'Node distribution refers to a project that needs to run on multiple nodes (servers). Use node distribution to manage this project uniformly (distributed project management functionality can be achieved)',
    addRelatedProjectDescription:
      'Adding a related project means associating a project that has already been created in the node as a node distribution project for unified management',
    createDistributionProjectDescription:
      'Creating a distribution project means creating a new project that belongs to the node distribution. After creation, the project information will be automatically synchronized to the corresponding node. Changes to the node distribution information will also be automatically synchronized to the corresponding node',
    distributionFiles: 'Distribution Files',
    more: 'More',
    cancelDistribution: 'Cancel Distribution',
    delete: 'Delete',
    release: 'Release',
    deleteCompletely: 'Delete Completely',
    unbind: 'Unbind',
    editRelatedProject: 'Edit Related Project',
    addRelatedProject: 'Add Related Project',
    noData: 'No data, please add node project data first',
    node: 'Node:',
    selectNode: 'Select Node',
    noNodeInfo: 'No node information',
    project: 'Project:',
    add: 'Add',
    editDistributionProject: 'Edit Distribution Project',
    createDistributionProject: 'Create Distribution Project',
    loadingData: 'Loading Data',
    remind: 'Remind',
    noLogicalNode: 'There is no logical node in the current workspace, and node distribution cannot be created',
    distributionName: 'Distribution Name (Project Name)',
    runningMode: 'Running Mode',
    scriptTemplate: 'Custom project management with script template',
    staticFolder: 'Project is a static folder',
    noProjectStatus: 'No project status and control functions',
    selectRunningMode: 'Select Running Mode',
    notRecommended: 'Not Recommended',
    projectPath: 'Project Path',
    authorizationPath: 'Authorization path refers to the folder where the project files are stored in the service',
    modifyAuthorizationConfig: 'You can modify it in [Node Distribution] => [Distribution Authorization Configuration]',
    projectFolder: 'Project Folder is the actual directory name where the project is stored',
    projectFilesStored: 'Project files will be stored in',
    authorizationPathProjectFolder: 'Authorization Path + Project Folder',
    jarFolder: 'The folder where the project is stored, the folder where the jar package is stored',
    configureAuthorizationDirectory: 'You need to configure the authorization directory in advance for the workspace',
    configureDirectory: 'Configure Directory',
    projectFullDirectory: 'Project Full Directory',
    content: 'Content',
    yamlConfig:
      'Configure in yaml/yml format, scriptId is the relative path of the script file under the project path or the server-side script template ID, which can be viewed in the server-side script template editing dialog box',
    variablesInScript:
      "Variables supported in the script include: {'${PROJECT_ID}'}, {'${PROJECT_NAME}'}, {'${PROJECT_PATH}'}",
    scriptOutput: 'After the process is executed, the script must output: running',
    processID: 'The actual process ID of the current project',
    incorrectOutputFormat:
      'If the last line of the output is not the expected format, the project status will be unrun',
    referToConfigExample: 'For configuration details, please refer to the configuration example',
    recommendedScriptDistribution: 'It is recommended to use the server-side script distribution to the script:',
    viewServerScript: 'View Server Script',
    fillProjectDSLConfig:
      'Please fill in the project DSL configuration content, you can click the tab above to view the configuration example',
    logDirectory: 'Log Directory',
    logDirectorySelection: 'Log Directory refers to the console log storage directory',
    sameConfigAsAuthorizationDirectory:
      'The list of options is consistent with the project authorization directory, that is, the same configuration',
    selectLogDirectory: 'Select Log Directory',
    mainClass: 'The main class for program execution (can be left blank for jar mode)',
    jvmArgs: 'Fill in [xxx',
    jvmArgsExample: '-Dext.dirs=xxx: -cp xx : xx]',
    selectDistributionNode: 'Select Distribution Node',
    jvmParams: 'JVM Parameters',
    params: 'Parameters',
    nonMandatory: 'Not Mandatory',
    jvmParamsExample: 'jvm, e.g.: -Xms512m -Xmx512m',
    argsParams: 'Args Parameters',
    functionArgsParams: 'Function args parameters, not mandatory',
    argsParamsExample: 'e.g.: --server',
    autoStart: 'Auto Start',
    checkProjectStatus:
      'Check project status when the plugin starts, if the project status is unrun, try to start the project',
    nonServerAutoStart: 'Non-server auto-start, if you need auto-start at boot, it is recommended to configure',
    pluginAutoStart: 'Plugin side auto-start at boot',
    turnOnAutoStart: 'And turn on this switch',
    on: 'On',
    off: 'Off',
    pluginAutoCheckProjectOnStart:
      'Automatically check the project when the plugin starts, if not started, it will attempt to start',
    dslEnvironmentVariables: 'DSL environment variables',
    environmentVariables: 'Environment variables',
    exampleVariable: 'For example: key1',
    projectRequestOnStartStopRestart:
      'When the project starts, stops, or restarts, it will request the corresponding address',
    parametersForProjectRequest: 'The input parameters are: projectId, projectName, type, result',
    valuesForProjectRequest: 'The values are: stop, beforeStop, start, beforeRestart',
    projectRequestOnFileChange:
      'When the project starts, stops, restarts, or a file changes, it will request the corresponding address, optional, GET request',
    configureAuthorizationDirectory1: 'Configure the authorization directory',
    viewScript: 'View script',
    projectGrouping: 'Project grouping',
    distributionStatus: 'After distribution',
    status: 'Status',
    creationTime: 'Creation time',
    modificationTime: 'Modification time',
    modifiedBy: 'Modified by',
    operations: 'Operations',
    enterProjectID: 'Please enter the project ID',
    enterProjectName: 'Please enter the project name',
    selectProjectRunningMode: 'Please select the project running mode',
    enterProjectFolder: 'Please enter the project folder',
    selectAtLeastOneNodeProject: 'Select at least 1 node project',
    selectAtLeastOneNode: 'Please select at least 1 node',
    confirmDeletionOfDistributionInfo:
      'Are you sure you want to permanently delete the distribution information? After deletion, the projects under the nodes will also be permanently deleted, and the project will automatically delete the related files (including project logs, log backups, project files)',
    confirmDeletionOfDistributionInfoSimple:
      'Are you sure you want to delete the distribution information? After deletion, the projects under the nodes will also be deleted',
    confirmReleaseOfDistributionInfo:
      'Are you sure you want to release the distribution information? After releasing, the project information under the nodes will still be retained, and if you need to delete the project, you will still need to operate in node management',
    confirmUnbindingCurrentNodeDistribution: 'Are you sure you want to unbind the current node distribution?',
    unbindCheckDataAssociation:
      'Unbinding will check data association and will not actually request the node to delete project information',
    unbindForUnreachableServer:
      'Generally used when the server cannot be connected and it has been determined not to be used anymore',
    cautionDueToMistakeOperation: 'Mistakes in operation can result in redundant data!!!',
    dangerousOperation: 'Dangerous operation!!!',
    noMoreNodeProjects: 'No more node projects available, please create a project first',
    selectNodeFirst: 'Please select a node first',
    confirmCancellationOfCurrentDistribution: 'Are you sure you want to cancel the current distribution?',
    disableScanDir: 'Disable scanning',
    scanning: 'scanning',
    dontScanning: "Don't scan",
    disableScanDirTip:
      'If the project directory is large or involves deep directories, it is recommended to turn off the scan to avoid getting the project directory scan too long and affecting performance'
  }
}
