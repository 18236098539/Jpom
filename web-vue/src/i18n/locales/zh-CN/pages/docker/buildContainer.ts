export default {
  c: {},
  p: {
    notStart: '不启动',
    introduction: '介绍',
    rootHasTrueRootPermission: '内的root拥有真正的root权限。',
    rootIsJustAnOrdinaryUser: '内的root只是外部的一个普通用户权限。默认false',
    containerCanSeeManyDevices:
      '启动的容器 可以看到很多host上的设备 可以执行mount。 可以在docker容器中启动docker容器。',
    privilege: '特权：',
    yes: '是',
    no: '否',
    cancel: '取消',
    confirm: '确认',
    containerNameIsRequired: '容器名称必填',
    containerNameAlphanumeric: '容器名称数字字母,且长度大于1',
    port: '端口',
    container: '容器',
    rebuildContainer: '重建容器',
    operationPrompt: '操作提示',
    containerRebuildDesc: '容器重建是指使用已经创建的容器参数重新创建一个相同的容器。',
    containerRestartDeleteBefore: '重启创建之前会自动将之前的容器删除掉',
    containerDataBackupWarning: '如果未挂载容器数据目录请提前备份数据后再使用此功能。',
    newContainerParamNotGuaranteed: '此功能不能保证新增的容器和之前容器参数完全一致请慎重使用。',
    baseImage: '基础镜像',
    containerName: '容器名称：',
    hostIp: '宿主机ip',
    containerPort: '容器端口',
    portProtocol: '端口协议',
    mountedVolume: '挂载卷',
    host: '宿主',
    hostDirectory: '宿主机目录',
    containerDirectory: '容器目录',
    environmentVariables: '环境变量',
    variableName: '变量名',
    variableValue: '变量值',
    command: '命令',
    commandValue: '命令值',
    fillRunningCommand: '填写运行命令',
    hostname: '主机名 hostname',
    network: '网络',
    networkMode: '网络模式：bridge、container:<name|id>、host、container、none',
    createNetworkStack: '为 docker bridge 上的容器创建一个新的网络堆栈',
    containerNoNetwork: '这个容器没有网络',
    reuseAnotherContainerNetworkStack: '重用另一个容器网络堆栈',
    useHostNetworkStack:
      '使用容器内的主机网络堆栈。 注意：主机模式赋予容器对本地系统服务（如 D-bus）的完全访问权限，因此被认为是不安全的。',
    restartPolicy: '重启策略',
    restartPolicyOptions: '重启策略：no、always、unless-stopped、on-failure',
    noAutoRestart: '不自动重启',
    alwaysRestart: '无论返回什么退出代码，始终重新启动容器。',
    restartOnFailure: '如果容器以非零退出代码退出，则重新启动容器。可以指定次数：on-failure:2',
    restartUnlessStopped: '重新启动容器，除非它已被停止',
    storageOptions: '存储选项',
    configName: '配置名 （如：size）',
    configValue: '配置值 （如：5g）',
    containerRuntime: '容器 runtime',
    containerLabels: '容器标签',
    containerLabelExample: '容器标签,如：key1=values1&keyvalue2',
    autoStart: '自动启动',
    start: '启动',
    noStart: '未启动'
  }
}
